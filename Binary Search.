#include <iostream>
#include <vector>


// Implement Binary Search using this function template
// return -1 if there is no such element, return an index if element exist
int BinarySearch(const std::vector<long>& v, long element) {
    size_t low = 0;
    size_t high = v.size() - 1;
    size_t mid = (low + high) / 2;

    
    while (true) {
        if (element == v[mid]) {
            return mid;
        }
        else if (high == low || (high - low < 2)) {
            if (mid + 1 < v.size() && v[mid + 1] == element)
                return mid + 1;
            else
                return -1;
        }
        if (element < v[mid]) {
            high = mid;
        }
        if (element > v[mid]) {
            low = mid;
        }
        mid = (high + low) / 2;
    }


}


int main() {
    std::vector<long> v;
    int N = 0;
    int t = 0;
    int element = 0;

    std::cin >> N;
    for (int i = 0; i < N; i++) {
        std::cin >> t;
        v.push_back(t);
    }

    std::cin >> element;
    
    std::cout << BinarySearch(v, element);

    return 0;
}
